$ terraform init

Initializing the backend...

Initializing provider plugins...
- Finding latest version of hashicorp/docker...
- Installing hashicorp/docker v3.0.2...
- Installed hashicorp/docker v3.0.2 (signed by HashiCorp)

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure.

$ terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # docker_container.nginx_container will be created
  + resource "docker_container" "nginx_container" {
      + name    = "nginx-container"
      + image   = (known after apply)
      + ports {
          + internal = 80
          + external = 8080
        }
    }

  # docker_image.nginx_image will be created
  + resource "docker_image" "nginx_image" {
      + name         = "nginx:latest"
      + keep_locally = false
    }

Plan: 2 to add, 0 to change, 0 to destroy.


$ terraform apply

Terraform will perform the following actions:

  # docker_image.nginx_image will be created
  + resource "docker_image" "nginx_image" {
      + name         = "nginx:latest"
      + keep_locally = false
    }

  # docker_container.nginx_container will be created
  + resource "docker_container" "nginx_container" {
      + name    = "nginx-container"
      + image   = (known after apply)
      + ports {
          + internal = 80
          + external = 8080
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

Enter a value: **yes**

docker_image.nginx_image: Creating...
docker_image.nginx_image: Creation complete after 3s
docker_container.nginx_container: Creating...
docker_container.nginx_container: Creation complete after 2s

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.


$ terraform destroy

Terraform will destroy the following resources:

  # docker_container.nginx_container will be destroyed
  - resource "docker_container" "nginx_container"

  # docker_image.nginx_image will be destroyed
  - resource "docker_image" "nginx_image"

Plan: 0 to add, 0 to change, 2 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure.
  There is no undo. Only 'yes' will be accepted to confirm.

Enter a value: **yes**

docker_container.nginx_container: Destroying...
docker_container.nginx_container: Destruction complete after 1s
docker_image.nginx_image: Destroying...
docker_image.nginx_image: Destruction complete after 1s

Destroy complete! Resources: 2 destroyed.


$ terraform state list

docker_container.nginx_container
docker_image.nginx_image
